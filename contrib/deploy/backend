#!/bin/bash

set -euo pipefail # exit on error; treat unset variables as errors; exit on errors in piped commands

# Build code
npm run server-build
mv build/backend/index.js build/code.js # update entrypoint to match that of our Terraform setup

# Install only a subset of dependencies, to not make the Lambda deployment exceed its ~70 MB limit
node -p "
  const p = require('./package.json')
  const _ = require('lodash')
  JSON.stringify({
    ...p,
    dependencies: _.pick(p.dependencies, p.lambdaDependencies)
  })
" > build/package.json
cp package-lock.json build # still want to use the correct lockfile
(cd build && npm install)

# Build into a zipfile
rm -f code.zip
(cd build && zip -r ../code.zip *)
ls -lah code.zip

# Upload new code & clean up
(cd infra && source .envrc && aws lambda update-function-code --function-name nightbear-stage-backend --zip-file fileb://../code.zip)
rm -f code.zip
